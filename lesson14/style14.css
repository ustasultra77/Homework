.box{
    height: 600px;
    display: flex;
    /*
        Все элементы внутри превратятся в флекс-элементы. А элемент
        будет себя вести как блочный.
        display: inline-flex;
        То же самое, только элемент родительский ведет себя как inline-block.
        На флекс-элементы не влияют такие параметры как:
        float
        clear
        vertical-align
        columns
    */

    flex-direction: column;
    /* 
        Меняет направление Главной оси
        row(по умолчанию) - горизонтальная ось
        column - вертикальная ось
        row-reverse - горизонтальная-обратная ось
        column-reverse - вертикальная-обратная ось
    */

    flex-wrap: wrap;
    /*
        nowrap(по умолчанию) - не позволяет элементам переноситься на новую строку
        wrap - позволяет элементам переноситься на новую строк, если им не хватает
        места
        wrap-reverse - тоже что и wrap, только перенос будет не в низ а вверх
    */

    flex-flow: row wrap;
    /*
        flex-flow: direction wrap;
    */

    justify-content: space-around;
    /*
        flex-start (по умолчанию) - элементы идут с начала оси
        flex-end - элементы прижимаются к концу оси
        center - элементы центрируются
        space-between - крайние элемент прижимаются к краям и оставшееся место
        распределяется как промежутки между ними
        space-around - свободное место распределяется как промежутки между 
        всеми элементами. Крайнее левое и крайнее правое пространтсов будет в 2 раза меньше
        чем между элементами.
        space-evenly - то же что и space-around, только крайний левый и крайний правый 
        отступ будет равен отступу между элементами
    */

    align-content: stretch;
    /*
        stretch (по умолчанию) - элементы максимально растягиваются относительно
        кросс-оси родителя (по высоте).
        flex-start - элементы прижимаются к верхней части контейнера
        flex-end - элементы прижимаются к нижней части контейнера
        center - элементы центрируются по кросс-оси.
        space-between - крайние элементы прижимаются к краям кросс-оси, 
        оставшееся место распределяется как отступы между элементами.
        space-around - свободное место распределяется между рядами, крайний верхний
        и крайний нижний отступ в 2 раза меньше чем между элементами.
        space-evenly - то что и space-aroun только все отступы по кросс-оси 
        одинаковые.
    */

    align-items: stretch;
    /*
        stretch (по умолчанию) - элементы растягиваются заполняя всю строку
        по высоте
        flex-start - элементы прижимаются к началу ряда(строки)
        flex-end - элементы прижимаются к концу ряда (строки)
        center - элементы выравниваются по центру ряда
        baseline- элементы выравниваются по базовой линии текста
        (базовая линия начинает совпадать с основной осью флекса)
    */

}

.box div:nth-child(1){
    background: red;
    flex-grow: 2;

    flex-basis: 50%;
    /*
        По умолчанию 0.
        flex-grow нужен для распределения между элементами свободного пространтства
        flex-shrink - это коэффициент уменьшения элемента. Оно противоположно
        flex-grow. Это свойсто начинает работать когда ширина суммы всех элементов
        меньше чем ширина родителя.
        flex-basis - устанавливает базовую ширину элемента, либо ширину которая будет
        вычеслена до все условий влияющих на ширину элемента.
        Поддерживает px \ em \ rem \ % \ vw \ vh
    */

    flex: 0 1 auto; /* Краткая запись flex: flex-grow flex-shrink flex-basis; */

    align-self: flex-start;
    /*
        stretch
        flex-start
        flex-end
        center
        baseline
    */
}

.box div:nth-child(2){
    background: blue;
    order: 5;
}

.box div:nth-child(3){
    background: purple;
    order: 4;

    /*  
    order - позволяет менять порядок элементов.
    по умолчанию равен 0 у всех
    назначая order больше 0 элементы он падает в конце списка и далее сортируется
    относительно order других элементов
    */
}

.box div{
    /* 
    width: 400px;
    height: 300px;
    */

    flex-grow: 1;
}


/*
.icon-burger{
    display: inline-flex;
    width: 30px;
    height: 30px;
    flex-direction: column;
    justify-content: space-around;
    margin-right: 20px;
}
.icon-burger span{
    background: #333;
    height: 5px;
}
.menu-link{
    display: inline-flex;
    align-items: center;
}
*/